# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ventanaHabitaciones.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import csv
from PyQt5 import QtCore, QtGui, QtWidgets
from ventanaListaClientes import ventanaListaCliente

class ventanaHabitaciones(object):
        def setupUi(self, Habitaciones):
                self.idHabitacionSeleccionada = None
                Habitaciones.setObjectName("Habitaciones")
                Habitaciones.setEnabled(True)
                Habitaciones.resize(802, 602)
                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap("Recursos/HotelMascota.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                Habitaciones.setWindowIcon(icon)
                Habitaciones.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
                self.centralwidget = QtWidgets.QWidget(Habitaciones)
                self.centralwidget.setObjectName("centralwidget")
                self.labelTitulo = QtWidgets.QLabel(self.centralwidget)
                self.labelTitulo.setGeometry(QtCore.QRect(-20, 0, 831, 81))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(27)
                font.setBold(False)
                font.setWeight(50)
                self.labelTitulo.setFont(font)
                self.labelTitulo.setStyleSheet("background-color: rgb(79, 163, 166);")
                self.labelTitulo.setAlignment(QtCore.Qt.AlignCenter)
                self.labelTitulo.setObjectName("labelTitulo")

                #Boton atras
                self.BtnAtras = QtWidgets.QPushButton(self.centralwidget)
                self.BtnAtras.setGeometry(QtCore.QRect(20, 15, 51, 51))
                self.BtnAtras.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.BtnAtras.setStyleSheet("background-color: rgb(79, 163, 166);\n" "border-radius: 10px;")
                self.BtnAtras.setText("")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("Recursos/FotoBtnAtras.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.BtnAtras.setIcon(icon1)
                self.BtnAtras.setIconSize(QtCore.QSize(50, 50))
                self.BtnAtras.setObjectName("BtnAtras")

                #Accion boton atras
                self.BtnAtras.clicked.connect(self.cambiar_a_ventana_anterior)

                #Tabla de las habitaciones 
                self.tablaHabitaciones = QtWidgets.QTableWidget(self.centralwidget)
                self.tablaHabitaciones.setGeometry(QtCore.QRect(251, 110, 551, 421))
                self.tablaHabitaciones.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
                self.tablaHabitaciones.setObjectName("tablaHabitaciones")
                self.tablaHabitaciones.setColumnCount(5)
                self.tablaHabitaciones.setRowCount(0)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                font = QtGui.QFont()
                font.setFamily("Arial")
                item.setFont(font)
                self.tablaHabitaciones.setHorizontalHeaderItem(0, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                font = QtGui.QFont()
                font.setFamily("Arial")
                item.setFont(font)
                self.tablaHabitaciones.setHorizontalHeaderItem(1, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                font = QtGui.QFont()
                font.setFamily("Arial")
                item.setFont(font)
                self.tablaHabitaciones.setHorizontalHeaderItem(2, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                font = QtGui.QFont()
                font.setFamily("Arial")
                item.setFont(font)
                self.tablaHabitaciones.setHorizontalHeaderItem(3, item)
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                font = QtGui.QFont()
                font.setFamily("Arial")
                item.setFont(font)
                self.tablaHabitaciones.setHorizontalHeaderItem(4, item)
                self.tablaHabitaciones.horizontalHeader().setCascadingSectionResizes(True)
                self.tablaHabitaciones.horizontalHeader().setDefaultSectionSize(106)
                self.tablaHabitaciones.horizontalHeader().setHighlightSections(True)
                self.tablaHabitaciones.horizontalHeader().setMinimumSectionSize(106)
                self.tablaHabitaciones.horizontalHeader().setSortIndicatorShown(False)
                self.tablaHabitaciones.horizontalHeader().setStretchLastSection(True)
                self.tablaHabitaciones.verticalHeader().setVisible(True)
                self.tablaHabitaciones.verticalHeader().setCascadingSectionResizes(True)
                self.tablaHabitaciones.verticalHeader().setSortIndicatorShown(False)
                self.tablaHabitaciones.verticalHeader().setStretchLastSection(False)

####################################--------FILTROS--------##################################################

                #Fecha de estadia
                self.labelFechaEstadia = QtWidgets.QLabel(self.centralwidget)
                self.labelFechaEstadia.setGeometry(QtCore.QRect(4, 113, 201, 31))
                self.labelFechaEstadia.setBaseSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(11)
                self.labelFechaEstadia.setFont(font)
                self.labelFechaEstadia.setStyleSheet("background-color: rgb(79, 163, 166);\n" "")
                self.labelFechaEstadia.setAlignment(QtCore.Qt.AlignCenter)
                self.labelFechaEstadia.setObjectName("labelFechaEstadia")

                #Fecha desde
                self.dateEditDesde = QtWidgets.QDateEdit(self.centralwidget)
                self.dateEditDesde.setGeometry(QtCore.QRect(65, 161, 110, 22))
                self.dateEditDesde.setObjectName("dateEditDesde")
                self.labelDesde = QtWidgets.QLabel(self.centralwidget)
                self.labelDesde.setGeometry(QtCore.QRect(20, 156, 51, 31))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(10)
                self.labelDesde.setFont(font)
                self.labelDesde.setObjectName("labelDesde")

                #Fecha hasta
                self.labelHasta = QtWidgets.QLabel(self.centralwidget)
                self.labelHasta.setGeometry(QtCore.QRect(20, 206, 51, 31))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(10)
                self.labelHasta.setFont(font)
                self.labelHasta.setObjectName("labelHasta")
                self.dateEditHasta = QtWidgets.QDateEdit(self.centralwidget)
                self.dateEditHasta.setGeometry(QtCore.QRect(65, 211, 110, 22))
                self.dateEditHasta.setObjectName("dateEditHasta")

                #Tamaño de la mascota
                self.labelSizeMascota = QtWidgets.QLabel(self.centralwidget)
                self.labelSizeMascota.setGeometry(QtCore.QRect(4, 261, 201, 31))
                self.labelSizeMascota.setBaseSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(11)
                self.labelSizeMascota.setFont(font)
                self.labelSizeMascota.setStyleSheet("background-color: rgb(79, 163, 166);\n" "")
                self.labelSizeMascota.setAlignment(QtCore.Qt.AlignCenter)
                self.labelSizeMascota.setIndent(-1)
                self.labelSizeMascota.setObjectName("labelSizeMascota")

                #ComboBox Tamaño Mascota
                self.comboBoxSizeMascota = QtWidgets.QComboBox(self.centralwidget)
                self.comboBoxSizeMascota.setGeometry(QtCore.QRect(21, 310, 111, 22))
                font = QtGui.QFont()
                font.setFamily("Arial")
                self.comboBoxSizeMascota.setFont(font)
                self.comboBoxSizeMascota.setObjectName("comboBoxSizeMascota")
                self.comboBoxSizeMascota.addItem("")
                self.comboBoxSizeMascota.addItem("")
                self.comboBoxSizeMascota.addItem("")
                self.comboBoxSizeMascota.addItem("")
                self.comboBoxSizeMascota.addItem("")
                self.comboBoxSizeMascota.addItem("")

                

                #Mascota peligrosa
                self.labelMascotaPeligrosa = QtWidgets.QLabel(self.centralwidget)
                self.labelMascotaPeligrosa.setGeometry(QtCore.QRect(3, 363, 201, 31))
                self.labelMascotaPeligrosa.setBaseSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(11)
                self.labelMascotaPeligrosa.setFont(font)
                self.labelMascotaPeligrosa.setStyleSheet("background-color: rgb(79, 163, 166);\n" "")
                self.labelMascotaPeligrosa.setAlignment(QtCore.Qt.AlignCenter)
                self.labelMascotaPeligrosa.setObjectName("labelMascotaPeligrosa")

                #ComboBox Mascota Peligrosa
                self.comboBoxMascotaPeligrosa = QtWidgets.QComboBox(self.centralwidget)
                self.comboBoxMascotaPeligrosa.setGeometry(QtCore.QRect(21, 410, 111, 22))
                font = QtGui.QFont()
                font.setFamily("Arial")
                self.comboBoxMascotaPeligrosa.setFont(font)
                self.comboBoxMascotaPeligrosa.setObjectName("comboBoxMascotaPeligrosa")
                self.comboBoxMascotaPeligrosa.addItem("")
                self.comboBoxMascotaPeligrosa.addItem("")
                self.comboBoxMascotaPeligrosa.addItem("")

                #Tipo de Mascota
                self.labelTipoMascota = QtWidgets.QLabel(self.centralwidget)
                self.labelTipoMascota.setGeometry(QtCore.QRect(3, 453, 201, 31))
                self.labelTipoMascota.setBaseSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(11)
                self.labelTipoMascota.setFont(font)
                self.labelTipoMascota.setStyleSheet("background-color: rgb(79, 163, 166);\n" "")
                self.labelTipoMascota.setAlignment(QtCore.Qt.AlignCenter)
                self.labelTipoMascota.setObjectName("labelTipoMascota")
                
                #ComboBox Tipo de Mascota
                self.comboBoxTipoMascota = QtWidgets.QComboBox(self.centralwidget)
                self.comboBoxTipoMascota.setGeometry(QtCore.QRect(21, 500, 111, 22))
                font = QtGui.QFont()
                font.setFamily("Arial")
                self.comboBoxTipoMascota.setFont(font)
                self.comboBoxTipoMascota.setObjectName("comboBoxTipoMascota")
                self.comboBoxTipoMascota.addItem("")
                self.comboBoxTipoMascota.addItem("")
                self.comboBoxTipoMascota.addItem("")
                self.comboBoxTipoMascota.addItem("")
                self.comboBoxTipoMascota.addItem("")

####################################--------FIN DE LOS FILTROS--------##################################################                

                #Boton Aplicar Filtros
                self.BtnAplicarFiltros = QtWidgets.QPushButton(self.centralwidget)
                self.BtnAplicarFiltros.setGeometry(QtCore.QRect(2, 549, 241, 31))
                self.BtnAplicarFiltros.setEnabled(False)
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(11)
                font.setBold(True)
                font.setWeight(75)
                self.BtnAplicarFiltros.setFont(font)
                self.BtnAplicarFiltros.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.BtnAplicarFiltros.setStyleSheet("background-color: rgb(79, 163, 166);\n" "border-radius:15px;\n" "")
                self.BtnAplicarFiltros.setObjectName("BtnAplicarFiltros")

                #Accion Boton Aplicar Filtros
                self.BtnAplicarFiltros.clicked.connect(self.aplicarFiltro)

                #Boton Aceptar
                self.BtnAceptar = QtWidgets.QPushButton(self.centralwidget)
                self.BtnAceptar.setGeometry(QtCore.QRect(640, 547, 151, 41))
                font = QtGui.QFont()
                font.setFamily("Arial")
                font.setPointSize(11)
                font.setBold(True)
                font.setWeight(75)
                self.BtnAceptar.setFont(font)
                self.BtnAceptar.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.BtnAceptar.setStyleSheet("background-color: rgb(0, 177, 15);\n" "border-radius:15px;")
                self.BtnAceptar.setObjectName("BtnAceptar")
                self.BtnAceptar.setEnabled(False)

                #Accion boton aceptar
                self.BtnAceptar.clicked.connect(lambda: self.cambiarVentanaListaCliente(self.obtenerHabitacionSeleccionada()))

                Habitaciones.setCentralWidget(self.centralwidget)
                self.retranslateUi(Habitaciones)
                QtCore.QMetaObject.connectSlotsByName(Habitaciones)

                self.cargarHabitacionesCSV()

                self.dateEditDesde.dateChanged.connect(self.verificarCamposFiltros)
                self.dateEditHasta.dateChanged.connect(self.verificarCamposFiltros)
                self.comboBoxSizeMascota.currentTextChanged.connect(self.verificarCamposFiltros)
                self.comboBoxMascotaPeligrosa.currentTextChanged.connect(self.verificarCamposFiltros)
                self.comboBoxTipoMascota.currentTextChanged.connect(self.verificarCamposFiltros)
                self.tablaHabitaciones.itemSelectionChanged.connect(self.verificarSeleccion)

        def retranslateUi(self, Habitaciones):
                _translate = QtCore.QCoreApplication.translate
                Habitaciones.setWindowTitle(_translate("Habitaciones", "Hotel"))
                self.labelTitulo.setText(_translate("Habitaciones", "Habitaciones"))
                item = self.tablaHabitaciones.horizontalHeaderItem(0)
                item.setText(_translate("Habitaciones", "Id"))
                item = self.tablaHabitaciones.horizontalHeaderItem(1)
                item.setText(_translate("Habitaciones", "Capacidad"))
                item = self.tablaHabitaciones.horizontalHeaderItem(2)
                item.setText(_translate("Habitaciones", "Separada"))
                item = self.tablaHabitaciones.horizontalHeaderItem(3)
                item.setText(_translate("Habitaciones", "Tipo de Mascota"))
                item = self.tablaHabitaciones.horizontalHeaderItem(4)
                item.setText(_translate("Habitaciones", "Precio Base"))
                self.labelFechaEstadia.setText(_translate("Habitaciones", "Fecha de estadia"))
                self.labelDesde.setText(_translate("Habitaciones", "Desde "))
                self.labelHasta.setText(_translate("Habitaciones", "Hasta"))
                self.labelSizeMascota.setText(_translate("Habitaciones", "Tamaño de la mascota"))
                self.comboBoxSizeMascota.setItemText(0, _translate("Habitaciones", "Elegir"))
                self.comboBoxSizeMascota.setItemText(1, _translate("Habitaciones", "Muy pequeño"))
                self.comboBoxSizeMascota.setItemText(2, _translate("Habitaciones", "Pequeño"))
                self.comboBoxSizeMascota.setItemText(3, _translate("Habitaciones", "Mediano"))
                self.comboBoxSizeMascota.setItemText(4, _translate("Habitaciones", "Grande"))
                self.comboBoxSizeMascota.setItemText(5, _translate("Habitaciones", "Muy Grande"))
                self.labelMascotaPeligrosa.setText(_translate("Habitaciones", "Mascota peligrosa"))
                self.BtnAceptar.setText(_translate("Habitaciones", "Aceptar"))
                self.BtnAplicarFiltros.setText(_translate("Habitaciones", "Aplicar Filtros"))
                self.comboBoxMascotaPeligrosa.setItemText(0, _translate("Habitaciones", "Elegir"))
                self.comboBoxMascotaPeligrosa.setItemText(1, _translate("Habitaciones", "Si"))
                self.comboBoxMascotaPeligrosa.setItemText(2, _translate("Habitaciones", "No"))
                self.labelTipoMascota.setText(_translate("Habitaciones", "Tipo de mascota"))
                self.comboBoxTipoMascota.setItemText(0, _translate("Habitaciones", "Elegir"))
                self.comboBoxTipoMascota.setItemText(1, _translate("Habitaciones", "Perro"))
                self.comboBoxTipoMascota.setItemText(2, _translate("Habitaciones", "Gato"))
                self.comboBoxTipoMascota.setItemText(3, _translate("Habitaciones", "Roedor"))
                self.comboBoxTipoMascota.setItemText(4, _translate("Habitaciones", "Otro"))


                


        def cambiarVentana(self, clase, id_Habitacion):
                self.uiVentanaActual = QtWidgets.QApplication.activeWindow()
                self.uiVentanaActual.close()
                self.nuevaVentana = QtWidgets.QMainWindow()
                self.ui = clase(id_Habitacion)
                self.ui.setupUi(self.nuevaVentana)
                self.nuevaVentana.show()

        def cambiarVentanaListaCliente(self, idHabitacion):
                self.uiVentanaActual = QtWidgets.QApplication.activeWindow()
                self.uiVentanaActual.close()
                self.nuevaVentana = QtWidgets.QMainWindow()
                self.ui = ventanaListaCliente(None, idHabitacion)  # Pasar cliente_id y idHabitacion como parámetros
                self.ui.setupUi(self.nuevaVentana)
                self.nuevaVentana.show()

        def cambiar_a_ventana_anterior(self):
                self.ventanaActual = QtWidgets.QApplication.activeWindow()
                self.ventanaActual.close()
                from ventanaAdministracion import ventanaAdministracion  # Importación local para evitar el ciclo de importación
                self.ventanaAnterior = QtWidgets.QMainWindow(self.ventanaActual.parent())
                self.uiVentanaAnterior = ventanaAdministracion()
                self.uiVentanaAnterior.setupUi(self.ventanaAnterior)
                self.ventanaAnterior.show()

        def insertarDatosEnTabla(self, datos):
                for fila in datos:
                        posicionFila = self.tablaHabitaciones.rowCount()
                        self.tablaHabitaciones.insertRow(posicionFila)

                        for columna, value in enumerate(fila):
                                item = QtWidgets.QTableWidgetItem(value)
                                item.setTextAlignment(QtCore.Qt.AlignCenter)
                                self.tablaHabitaciones.setItem(posicionFila, columna, item)

        # Abre el archivo CSV y devuelve los datos como una lista de filas
        def leerDatosDesdeCSV(self):
                with open('ArchivosCSV/Habitacion.csv', newline='') as csvfile:
                        reader = csv.reader(csvfile, delimiter=',', quotechar='"')
                        return list(reader)
                
        # Carga los datos del archivo CSV en el tableWidget
        def cargarHabitacionesCSV(self):
                datos = self.leerDatosDesdeCSV()

                if datos:
                        # Seleccionar las columnas "Id", "Capacidad", "Separada", "Tipo de Mascota" y "Precio Base" (columnas 0, 1, 2, 3 y 4)
                        datos_seleccionados = [[fila[0], fila[1], "Si" if fila[2] == "True" else "No" if fila[2] == "False" else "Separada", fila[3], fila[4]] for fila in datos]
                        encabezados = datos_seleccionados.pop(0)
                        self.tablaHabitaciones.setColumnCount(len(encabezados))
                        self.tablaHabitaciones.setHorizontalHeaderLabels(encabezados)

                        self.insertarDatosEnTabla(datos_seleccionados)
                else:
                        print("La lista de datos está vacía")

        def verificarCamposFiltros(self):
                # Obtener los valores de los campos de entrada de datos
                desde = self.dateEditDesde.text()
                hasta = self.dateEditHasta.text()
                sizeMascota = self.comboBoxSizeMascota.currentText()
                mascotaPeligrosa = self.comboBoxMascotaPeligrosa.currentText()
                tipoMascota = self.comboBoxTipoMascota.currentText()

                # Verificar si todos los campos tienen datos
                if desde and hasta and sizeMascota != "Elegir" and mascotaPeligrosa != "Elegir" and tipoMascota != "Elegir":
                        self.BtnAplicarFiltros.setEnabled(True)
                else:
                        self.BtnAplicarFiltros.setEnabled(False)
        
        def aplicarFiltro(self):
                capacidad = {
                        "Muy Pequeña": 1,
                        "Pequeña": 2,
                        "Mediana": 3,
                        "Grande": 4,
                        "Muy Grande": 5
                }

                separada = {
                        "Si": True,
                        "No": False
                }

                tipo_mascota = {
                        "Perro": "Perro",
                        "Gato": "Gato",
                        "Roedor": "Roedor",
                        "Otros": "Otros"
                }

                filtro_capacidad = capacidad.get(self.comboBoxSizeMascota.currentText())
                filtro_separada = separada.get(self.comboBoxMascotaPeligrosa.currentText())
                filtro_tipo_mascota = tipo_mascota.get(self.comboBoxTipoMascota.currentText())

                self.tablaHabitaciones.setRowCount(0)

                with open('ArchivosCSV/Habitacion.csv', 'r') as file:
                        reader = csv.reader(file)
                        next(reader)  # Skip header row
                        for row in reader:
                                if (filtro_capacidad is None or int(row[1]) >= filtro_capacidad) and \
                                        (filtro_separada is None or row[2] == str(filtro_separada)) and \
                                        (filtro_tipo_mascota is None or row[3] == filtro_tipo_mascota):
                                                self.tablaHabitaciones.insertRow(self.tablaHabitaciones.rowCount())
                                                for column, value in enumerate(row):
                                                        self.tablaHabitaciones.setItem(self.tablaHabitaciones.rowCount() - 1, column, QtWidgets.QTableWidgetItem(str(value)))

        def verificarSeleccion(self):
                if self.tablaHabitaciones.selectedItems():
                        self.BtnAceptar.setEnabled(True)
                else:
                        self.BtnAceptar.setEnabled(False)                                              

        def obtenerHabitacionSeleccionada(self):
                fila_seleccionada = self.tablaHabitaciones.currentRow()
                if fila_seleccionada != -1:
                        id_Habitacion = self.tablaHabitaciones.item(fila_seleccionada, 0).text()
                        self.usuario_seleccionado = id_Habitacion
                        return id_Habitacion                        
        


        
        